# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.require_version ">= 1.8.4"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # set to false, if you do NOT want to check the correct VirtualBox Guest Additions version when booting this box
  if defined?(VagrantVbguest::Middleware)
    config.vbguest.auto_update = true
  end


  config.vm.define "elk" do |elk|
    elk.vm.box = "ubuntu/trusty64"
    elk.vm.network "private_network", ip: "10.1.1.2"
    elk.vm.hostname = "elk"
    elk.vm.provider :virtualbox do |vb|
      vb.customize ["modifyvm", :id, "--cpus", "1", "--memory", "2048"]
    end
  end


  config.vm.define "nexus" do |nexus|
    nexus.vm.box = "ubuntu/trusty64"
    nexus.vm.network "private_network", ip: "10.1.1.3"
    nexus.vm.hostname = "nexus"
    nexus.vm.provider :virtualbox do |vb|
      vb.customize ["modifyvm", :id, "--cpus", "1", "--memory", "2048"]
    end
  end

  attoServerArray = ["servicelocator", "server"]
  attoServerArray.each_with_index do |name, index|
    config.vm.define "atto-#{name}" do |node|
      node.vm.box = "ubuntu/trusty64"
      node.vm.network "private_network", ip: "10.1.1.#{5 + index}"
      node.vm.hostname = "atto-#{name}"
      node.vm.provider :virtualbox do |vb|
        vb.customize ["modifyvm", :id, "--cpus", "1", "--memory", "512"]
      end
    end
  end


    config.vm.provision "ansible_local" do |prov|
	prov.install = true 
	prov.playbook = "/vagrant/ansible/playbook.yml"
    end

  config.vm.provider :virtualbox do |vb|
    vb.customize ["modifyvm", :id, "--cpus", "1", "--memory", "1024"]
  end
  

  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"


end
